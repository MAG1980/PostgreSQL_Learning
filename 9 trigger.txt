9. Создать триггер на обновление заказов, который автоматически заполняет столбец скидки на полную стоимость заказа в
зависимости от её величины.
Проверить работу триггера вставкой записей с корректными и некорректными значениями.

Добавляю в таблицу заказов столбец полной стоимости заказа (без учёта скидки).

ALTER TABLE orders
ADD COLUMN
total_cost NUMERIC;

Добавляю в таблицу заказов столбец скидки на полную стоимость заказа.

Создаю процедуру для заполнения столбца полной стоимости заказа,
используя функцию для расчёта полной стоимости заказа, созданную в пункте 8 проекта.

CREATE OR REPLACE PROCEDURE order_total_cost_calculation()
LANGUAGE PLPGSQL AS
$$
DECLARE order_row RECORD;
BEGIN
  FOR order_row IN
    SELECT *
      FROM orders
		JOIN orders_products
	 	ON orders_products.order_id = orders.id
  LOOP
	UPDATE orders SET total_cost =
	(SELECT
	get_order_cost(order_row.id)
	FROM orders
	JOIN orders_products
	  ON orders_products.order_id = orders.id
	WHERE orders.id = order_row.id
	GROUP BY orders.id)
	WHERE orders.id = order_row.id;
  END LOOP;
COMMIT;
END;
$$;

Заполняю столбец полной стоимости заказа результатами, рассчитанными на основании данных, хранящихся в таблице orders_products.

CALL order_total_cost_calculation();

Создаю триггерную функцию.

CREATE OR REPLACE FUNCTION order_total_cost_and_discount_calculation_trigger()
RETURNS TRIGGER AS
$$
DECLARE
order_total_cost NUMERIC;
order_discount NUMERIC;
BEGIN
	order_total_cost := (SELECT get_order_cost(NEW.order_id));
	case
		when order_total_cost > 15000 then
        	order_discount = 1.5;
		when order_total_cost > 500 then
            order_discount = 1.2;
		when order_total_cost > 300 then
            order_discount = 1;
		when order_total_cost > 200 then
            order_discount = 0.7;
		when order_total_cost > 100 then
            order_discount = 0.5;
		else
	        order_discount = 0;
	end case;
	UPDATE orders
	  SET
	    total_cost = order_total_cost,
	    discount = order_discount
	WHERE id = NEW.order_id;
	RETURN NEW;
END
$$
LANGUAGE PLPGSQL;

Создаю триггер на обновление данных в таблице orders_products

CREATE TRIGGER order_total_cost_discount_calculation_on_orders_products_update AFTER UPDATE ON orders_products
	FOR EACH ROW
	EXECUTE FUNCTION order_total_cost_and_discount_calculation_trigger();



Создаю триггер на добавление данных в таблицу orders_products

CREATE TRIGGER order_total_cost_discount_calculation_on_orders_products_insert AFTER INSERT ON orders_products
	FOR EACH ROW
	EXECUTE FUNCTION order_total_cost_and_discount_calculation_trigger();